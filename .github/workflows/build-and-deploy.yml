name: Build Docker + Release

on:
  push:
    tags:
      - "v*"

jobs:
  docker-builds:
    name: Build Docker ${{ matrix.backend }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        backend: [face, voice]
    steps:
      - name: Free Disk Space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/share/chromium /usr/local/.ghcup /usr/share/swift /opt/hostedtoolcache/swift
          sudo rm -rf /usr/local/lib/node_modules /opt/hostedtoolcache/go /opt/hostedtoolcache/Ruby
          docker system prune --all --force --volumes
          sudo apt-get autoremove -y
          sudo apt-get clean
          pip cache purge || true
          df -h

      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backends/${{ matrix.backend }}/Dockerfile.${{ matrix.backend }}.gpu
          push: true
          tags: |
            spruceemma/${{ matrix.backend }}-backend:${{ github.ref_name }}
            spruceemma/${{ matrix.backend }}-backend:latest
          build-args: |
            GITHUB_REF_NAME=${{ github.ref_name }}

  test-docker-images:
    name: Test Dockerized Backend ${{ matrix.backend }}
    runs-on: ubuntu-latest
    needs: docker-builds
    strategy:
      fail-fast: false
      matrix:
        include:
          - backend: face
            port: 8081
          - backend: voice
            port: 8080
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull the specific Docker Image for testing
        run: docker pull spruceemma/${{ matrix.backend }}-backend:${{ github.ref_name }}

      - name: Run Docker Container in background
        run: |
          docker run -d --name test-container \
            -p ${{ matrix.port }}:${{ matrix.port }} \
            spruceemma/${{ matrix.backend }}-backend:${{ github.ref_name }}

      - name: Wait for Server to Initialize
        run: |
          echo "Waiting up to 30 seconds for container to initialize (model downloads, etc.)..."
          sleep 30

      - name: Perform Health Check (Smoke Test)
        run: |
          echo "Pinging the health check endpoint..."
          curl --fail http://localhost:${{ matrix.port }}/health

      - name: Check Container Logs for Errors
        run: |
          echo "--- Displaying Container Logs ---"
          docker logs test-container

      - name: Cleanup Container
        if: always()
        run: |
          docker stop test-container
          docker rm test-container
