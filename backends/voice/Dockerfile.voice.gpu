# Use a CUDA runtime base image
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    wget \
    unzip \
    libsndfile1 \
    ffmpeg \
    libffi-dev \
    libssl-dev \
    libportaudio2 \
    libportaudiocpp0 \
    portaudio19-dev \
    python3.10 \
    python3.10-dev \
    python3.10-venv \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy backend and script
COPY backends/voice /app/backends/voice
COPY scripts/package_zip.py /app/scripts/package_zip.py

# Create virtual environment
RUN python3 -m venv /app/venv

# Upgrade pip and install PyInstaller
RUN /app/venv/bin/pip install --upgrade pip==23.3.2 setuptools wheel
RUN /app/venv/bin/pip install pyinstaller

# Install backend requirements (from inside /app/backends/voice)
RUN /app/venv/bin/pip install -r /app/backends/voice/requirements.txt --no-cache-dir

# Install GPU-specific dependencies
RUN /app/venv/bin/pip install torch==2.0.1+cu118 -f https://download.pytorch.org/whl/torch_stable.html --no-cache-dir
RUN /app/venv/bin/pip install fairseq==0.12.2 faiss-gpu==1.7.2

# Build binary with PyInstaller
ARG GITHUB_REF_NAME=dev
RUN /app/venv/bin/python /app/scripts/package_zip.py --backend voice --device gpu --os linux --version ${GITHUB_REF_NAME}

# Make start script executable
RUN chmod +x /app/backends/voice/start_voice.sh

# Set runtime working dir to backend
WORKDIR /app/backends/voice

# Expose port
EXPOSE 8080

# Default command
CMD ["./start_voice.sh"]
